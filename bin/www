#!/usr/bin/env node
const http = require('http');

const app = require('../app');
const log = require('../utilities/log');

function normalizePort(val) {
  const port = parseInt(val, 10);
  if (Number.isNaN(Number(port))) {
    return val;
  }
  if (port >= 0) {
    return port;
  }
  return false;
}

const port = (process.env.PORT && normalizePort(process.env.PORT)) || 9000;
app.set('port', port);

const server = http.createServer(app);

// run the server
server.listen(port);

server.on('error', (error) => {
  if (error.syscall !== 'listen') {
    throw error;
  }
  const bind = typeof port === 'string'
    ? `Pipe ${port}`
    : `Port ${port}`;

  switch (error.code) {
    case 'EACCES':
      log(`${bind} requires elevated privileges`);
      return process.exit(1);
    case 'EADDRINUSE':
      log(`${bind} is already in use`);
      return process.exit(1);
    default:
      throw error;
  }
});

server.on('listening', () => log(`MERN TEST BACKEND running on port ${port}`));

module.exports = server;
